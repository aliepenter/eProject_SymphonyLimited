@model eProject_SymphonyLimited.Areas.Admin.Data.ViewModel.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<h2>Change Password</h2>
<hr />

<!-- Outer Row -->
<div class="row justify-content-center">
    <div class="col-xl-10 col-lg-12 col-md-9">
        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="p-5">

                    @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
                    {
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                        }
                        if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                        }
                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Change" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
