@model eProject_SymphonyLimited.Areas.Admin.Data.ViewModel.UserViewModel
@{
    ViewBag.Title = "User Profile";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section css{
    <style>
        .btn-file {
            position: relative;
            overflow: hidden;
        }

            .btn-file input[type=file] {
                position: absolute;
                top: 0;
                right: 0;
                min-width: 100%;
                min-height: 100%;
                font-size: 100px;
                text-align: right;
                filter: alpha(opacity=0);
                opacity: 0;
                outline: none;
                background: white;
                cursor: inherit;
                display: block;
            }

        #img-upload {
            width: 100%;
        }
    </style>
}

<h2>Profile</h2>
<hr />

<!-- Outer Row -->
<div class="row justify-content-center">
    <div class="col-xl-10 col-lg-12 col-md-9">
        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="p-5">

                    @using (Html.BeginForm("UserProfile", "Home", FormMethod.Post, new { enctype = "multipart/form-data"}))
                    {
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                        }

                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-4">
                                <img id='img-upload' src="/Areas/Admin/Content/img/@Model.Image" />
                                <span class="btn btn-outline-primary btn-file mt-2 mb-2">
                                    Change <input type="file" id="imgInp" name="imgFile">
                                </span>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8">
                            </div>
                        </div>

                        <div class="form-horizontal">

                            @Html.HiddenFor(model => model.EntityId)
                            @Html.HiddenFor(model => model.Account)
                            @Html.HiddenFor(model => model.Image)
                            @Html.HiddenFor(model => model.Password)
                            @Html.HiddenFor(model => model.GroupId)
                            @Html.HiddenFor(model => model.GroupUserName)

                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function (e) {
                    $('#imgPreview').attr('src', e.target.result);
                }
                $('#imgPreview').removeClass("displayNone");
                ImageDir.readAsDataURL(input.files[0]);
            } else {
                $('#imgPreview').addClass("displayNone");
            }
        }
        $(document).ready(function () {
            $(document).on('change', '.btn-file :file', function () {
                var input = $(this),
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
            $("#imgInp").change(function () {
                readURL(this);
            });
        });
    </script>

}