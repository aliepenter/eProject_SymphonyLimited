@model eProject_SymphonyLimited.Models.Admission

@{
    ViewBag.Title = "Create";
}

<h2>Admission</h2>

<!-- Outer Row -->
<div class="row justify-content-center">
    <div class="col-xl-10 col-lg-12 col-md-9">
        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="p-5">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Create</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EndTime, "End Time", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BillTime, "BillTime", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.BillTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BillTime, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PassedMark, "Passed Mark", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PassedMark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PassedMark, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MaxMark, "Max Mark", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MaxMark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MaxMark, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, "Exntrance Exam Price", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.CourseId, new SelectList(ViewBag.CourseList, "EntityId", "Name", "Select"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-outline-primary" />
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<a href="@Url.Action("Index")" class="btn btn-dark mb-2"><i class="fas fa-arrow-circle-left"></i> Back to list</a>
