
@{ ViewBag.Title = "Index"; }

<h2>Index</h2>

<p>
    <button type="button" class="btn btn-primary btn-create-entity" data-toggle="modal" data-target="#formEntity">
        Create New Entity
    </button>
    <button type="button" class="btn btn-primary btn-create-attribute" data-toggle="modal" data-target="#formAttribute">
        Create New Attribute
    </button>
    <div class="form-inline">
        <label class="control-label">Search: </label>
        <input type="search" name="key" id="key" value="" placeholder="Enter name to search...." />
    </div>
</p>

<table class="table table-attributes"></table>

<ul class="pagination"></ul>

<div class="modal fade" id="formEntity" tabindex="-1" role="dialog" aria-labelledby="formEntity" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <form id="frmEntity">
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-2" for="Name">Name</label>
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="EavEntityName" name="EavEntityName" type="text" value="">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="formAttribute" tabindex="-1" role="dialog" aria-labelledby="formAttribute" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <form id="frmAttribute">
                <div class="modal-body">
                    <div class="form-horizontal">
                        <input type="hidden" name="EntityId" id="EntityId" value="" />
                        <input type="hidden" name="Type" id="Type" value="CREATE" />
                        <div class="form-group">
                            <label class="control-label col-md-2" for="Name">Name</label>
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="EavAttributeName" name="EavAttributeName" type="text" value="">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2" for="Entity">Entity</label>
                            <div class="col-md-10">
                                <select class="form-control entity-options"></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>
        $(document).ready(function () {
            var baseUrl = window.location.protocol + "//" + window.location.host + "/" + window.location.pathname.split('/')[1] + "/";
            var formEntityValid = $("#frmEntity").validate({
                submitHandler: function () {
                    var frmDataEntity = new FormData();
                    frmDataEntity.append("Name", $("#EavEntityName").val());
                    manager.postEntity(frmDataEntity);
                }
            });
            var formAttributeValid = $("#frmAttribute").validate({
                submitHandler: function () {
                    var frmDataAttribute = new FormData();
                    frmDataAttribute.append("Name", $("#EavAttributeName").val());
                    frmDataAttribute.append("EavEntityId", $(".entity-options").val());
                    if ($('#Type').val() == "EDIT") {
                        frmDataAttribute.append("EntityId", $("#EntityId").val());
                        manager.updateAttribute(frmDataAttribute);
                    } else {
                        manager.postAttribute(frmDataAttribute);
                    }
                }
            });
            var manager = {
                load: function (page = 1, key = null) {
                    $.ajax({
                        type: "GET",
                        url: baseUrl + "Attribute/GetAttributes",
                        data: { page: page, key: key },
                        success: function (res) {
                            var _html = '<tr><th>Id</th><th>Name</th><th>Attribute Code</th><th>Entity</th><th></th></tr>';
                            for (var item of JSON.parse(res.Data)) {
                                _html += '<tr>' +
                                    '<td>' + item.EntityId + '</td>' +
                                    '<td>' + item.Name + '</td>' +
                                    '<td>' + item.AttributeCode + '</td>' +
                                    '<td>' + item.Entity + '</td>' +
                                    '<td>' +
                                    '<button class="btn btn-warning btn-edit" data-id="' + item.EntityId + '">Edit</button>' +
                                    '<button class="btn btn-danger btn-delete" data-id="' + item.EntityId + '">Delete</button>' +
                                    '</td>'
                                    + '</tr>';
                            }
                            $('.table-attributes').html(_html);
                            var pages = '';
                            for (var i = 1; i <= res.TotalPages; i++) {
                                if (i == res.CurrentPage) {
                                    pages += '<li class="active"><a href="javascript:void(0)"><button class="btn btn-warning">' + i + '</button></a></li>';
                                } else {
                                    pages += '<li><a class="item_page" href="javascript:void(0)"><button class="btn btn-warning">' + i + '</button></a></li>';
                                }
                            }
                            $(".pagination").html(pages);
                        }
                    })
                    $.ajax({
                        type: "GET",
                        url: baseUrl + "Attribute/GetEntitties",
                        success: function (res) {
                            var _html = '<option value="">--Please Select--</option>'
                            for (var item of JSON.parse(res.Data)) {
                                _html += '<option value="' + item.EntityId + '">' + item.Name + '</option>';
                            }
                            $('.entity-options').html(_html);
                        }
                    })
                },
                postEntity: function (entity) {
                    $.ajax({
                        type: "POST",
                        url: baseUrl + "Attribute/PostEntity",
                        data: entity,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.StatusCode == 200) {
                                manager.load();
                                $("#formEntity").modal('hide');
                            } else {
                                formEntityValid.showErrors(res.Data);
                            }
                        }
                    })
                    return;
                },
                postAttribute: function (attribute) {
                    $.ajax({
                        type: "POST",
                        url: baseUrl + "Attribute/PostAttribute",
                        data: attribute,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.StatusCode == 200) {
                                manager.load();
                                $("#formAttribute").modal('hide');
                            } else {
                                formAttributeValid.showErrors(res.Data);
                            }
                        }
                    })
                    return;
                },
                updateAttribute: function (attribute) {
                    $.ajax({
                        type: "POST",
                        url: baseUrl + "Attribute/UpdateAttribute",
                        data: attribute,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.StatusCode == 200) {
                                manager.load();
                                $("#formAttribute").modal('hide');
                            } else {
                                formAttributeValid.showErrors(res.Data);
                            }
                        }
                    })
                    return;
                },
                get: function (id) {
                    $.ajax({
                        type: "GET",
                        url: baseUrl + "Attribute/GetAttributeById",
                        data: { id: id },
                        success: function (res) {
                            var data = JSON.parse(res.Data);
                            $('#EavAttributeName').val(data.Name);
                            $('.entity-options').val(data.EavEntityId);
                            $("#formAttribute").modal('show');
                        }
                    })
                },
                delete: function (id) {
                    $.ajax({
                        type: "POST",
                        url: baseUrl + "Attribute/DeleteAttributeById",
                        data: { id: id },
                        success: function (res) {
                            manager.load();
                        }
                    })
                }
            }
            manager.load();
            $(document).on("click", ".btn-edit", function () {
                $('#Type').val('EDIT');
                var attributeId = $(this).data("id");
                $('#EntityId').val(attributeId);
                manager.get(attributeId);
            })
            $(document).on("click", ".btn-create-attribute", function () {
                $('#EavAttributeName').val(null);
                $('.entity-options').val(null);
                $('#Type').val('CREATE');
            })
            $(document).on("click", ".btn-create-entity", function () {
                $('#EavEntityName').val(null);
            })
            $(document).on("click", ".item_page", function () {
                var page = $(this).text(),
                    key = $('#key').val();
                manager.load(page, key);
            })
            $('#key').keyup(function () {
                var key = $("#key").val();
                manager.load(1, key);
            })
            $(document).on("click", ".btn-delete", function () {
                if (confirm("Are you sure you want to delete this?")) {
                    var attributeId = $(this).data("id");
                    manager.delete(attributeId);
                }
                else {
                    return false;
                }
            })
        });
    </script>
}

<style>
    .error {
        font-size: unset;
        width: 100%;
        color: red;
    }
</style>